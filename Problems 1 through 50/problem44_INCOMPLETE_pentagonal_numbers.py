# This Python file uses the following encoding: utf-8
'''
Author: Matthew Mettler
Project Euler, Problem 44
https://projecteuler.net/problem=44

Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten 
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference are pentagonal and D = |Pk − Pj| is minimised; what is the 
value of D?

Status: Incomplete
'''
from itertools import combinations
pentagonals = [1, 5]
pairs = [[1,5]]
D = 0
removed = 0
def get_nth_pentagonal(n):
	return n*(3*n-1)/2;

def valid_pair(n, m):
	global removed
	if (n-m) in pentagonals:
		if (n+m) in pentagonals:
			return True
	return False

n = 3
toDelete = []
while(True):
	pairs.extend([[x, get_nth_pentagonal(n)] for x in pentagonals])
	pentagonals.append(get_nth_pentagonal(n))
	n += 1

	if n % 200 == 0:
		print("n is {}".format(n))
		print("pairs is of size {} (removed {})".format(len(pairs), removed))
		for num in range(len(pairs)):
			pair = pairs[num]
			if valid_pair(pair[0], pair[1]):
				this_d = abs(pair[0] - pair[1])
				if D == 0:
					print("First D:{}".format(this_d))
					D = this_d
				elif this_d < D: 
					D = this_d
					print("New D:{}".format(D))
					exit()
			else:
				if pair[0]+pair[1] < pentagonals[-1]:
					toDelete.append(num)
					removed += 1
		for i in range(len(toDelete)-1,0,-1):
			del pairs[toDelete[i]]
		toDelete = []
