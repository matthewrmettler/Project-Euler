# This Python file uses the following encoding: utf-8
'''
Author: Matthew Mettler
Project Euler, Problem 44
https://projecteuler.net/problem=44

Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten 
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference are pentagonal and D = |Pk − Pj| is minimised; what is the 
value of D?

Status: Incomplete
'''
from time import time

pentagonals = [1, 5]
pairs = [[1,5]]
n = 3
toDelete = []
start_time = time()
pair = []
removed = 0

def get_nth_pentagonal(n):
	return n*(3*n-1)/2;

while(True):
	if n % 10 == 0:
	 	pentagonals = [x for x in pentagonals if x > 2*n+1]
		print(pentagonals)
 	if n == 30: break
	pairs.extend([[x, get_nth_pentagonal(n)] for x in pentagonals])
	pentagonals.append(get_nth_pentagonal(n))
	if n == 100: break
	if n % 300 == 0:
		print("n = \t{}\t\t({} sec)\t\tpentagonal(n) = \t{}\t\tlen(pentagonals) = {}\t\tpairs = {}\t\tremoved = {}".format(str(n).zfill(4), "%.2f" % (time() - start_time), pentagonals[-1], len(pentagonals), len(pairs), removed))
		for num in xrange(len(pairs)):
			pair = pairs[num]
			if pair[1] - pair[0] in pentagonals:
				if pair[0]+pair[1] in pentagonals:
					print("--------\n{} and {} is a valid pair!\n--------".format(pair[0], pair[1]))
					this_d = abs(pair[0] - pair[1])
					print("\tFound D is {}".format(this_d))
					exit()
				else:
					if pair[0]+pair[1] < pentagonals[-1]:
						toDelete.append(num)
						removed += 1
						continue
			else:
				toDelete.append(num)
				removed += 1
		for i in range(len(toDelete)-1,-1,-1):
			del pairs[toDelete[i]]
		toDelete = []
					
	n += 1
